{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Hollicode",
	"scopeName": "source.hollicode",
	"patterns": [
		{ "include": "#comment" },
		{ "include": "#anchor" },
		{ "include": "#goto" },
		{ "include": "#directive" },
		{ "include": "#text-line" }
	],
	"repository": {
		"directive": {
			"begin": "^[ \t]*\\[",
			"end": "\\]",
			"patterns": [
				{ "include": "#string-literal" },
				{ "include": "#number-literal" },
				{ "include": "#function-call" },
				{ "include": "#keyword" },
				{ "include": "#const-word" },
				{ "include": "#operator" },
				{ "include": "#identifier" }
			]
		},
		"comment": {
			"match": "^[ \t]*#.+",
			"name": "comment.number-sign"
		},
		"anchor": {
			"match": "^[ \t]*>.+",
			"name": "markup.heading"
		},
		"goto": {
			"match": "^[ \t]*\\->.+",
			"name": "variable.parameter"
		},
		"text-line": {
			"match": "^[ \t]*(\\-)?.*$",
			"name": "string.other",
			"captures": {
				"1": { "name": "keyword.operator" }
			}
		},
		"keyword": {
			"match": "\\b(if|else|option|wait|include|return)\\b",
			"name": "keyword.language"
		},
		"operator": {
			"patterns": [
				{
					"match": "<=|>=|==|<|>|!=|&&|\\|\\||\\+|\\-|\\*|\\/",
					"name": "keyword.operator"
				},
				{
					"match": "\\b(and|or|not)\\b",
					"name": "keyword.operator"
				}
			]
		},
		"function-call": {
      "match": "\\b([A-Za-z_]\\w*)\\b(?=\\s*(?:[(]))",
      "name": "entity.name.function"
		},
		"const-word": {
			"match": "\\b(true|false|nil)\\b",
			"name": "constant.language"
		},
		"identifier": {
			"match": "\\b([a-zA-Z_][a-zA-Z_0-9]*)\\b",
			"name": "variable.other"
		},
		"string-literal": {
			"patterns": [
				{
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
							"name": "constant.character.escape",
              "match": "\\\\."
            }
          ],
          "name": "string.quoted.double"
        },
				{
					"match": "(\\:\\s*[a-zA-Z_][a-zA-Z_0-9]*)",
					"name": "string.quoted.other"
				}
			]
		},
		"number-literal": {
			"match": "\\b\\-?(\\d*\\.)?\\d+\\b",
			"name": "constant.numeric"
		}
	}
}